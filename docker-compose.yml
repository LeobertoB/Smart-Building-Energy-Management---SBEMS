version: '3.8'

# TODO: Change these default passwords for production use

services:
  # Main SBEMS Application
  sbems:
    build: .
    container_name: sbems-app
    ports:
      - "5000:5000" # API
      - "8080:8080" # Web Dashboard
    environment:
      - DATABASE_URL=postgresql://sbems:sbems_password@postgres:5432/sbems_db
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - FLASK_ENV=production
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./data:/app/data
      - ./exports:/app/exports
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "python3", "-c", "import requests; requests.get('http://localhost:5000/health')" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sbems-postgres
    environment:
      - POSTGRES_DB=sbems_db
      - POSTGRES_USER=sbems
      - POSTGRES_PASSWORD=sbems_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sbems -d sbems_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: sbems-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 3

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: sbems-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - postgres
    restart: unless-stopped

  # Prometheus Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: sbems-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:


networks:
  default:
    driver: bridge
